[{"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\App.tsx":"1","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\index.tsx":"2","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\reportWebVitals.ts":"3","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectList.js":"4","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListView.tsx":"5","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListContainer.tsx":"6","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailContainer.tsx":"7","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\ticketList.js":"8","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailView.tsx":"9","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectDetail.js":"10","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTable.tsx":"11","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\utils.tsx":"12"},{"size":848,"mtime":1610053465348,"results":"13","hashOfConfig":"14"},{"size":530,"mtime":1609788794223,"results":"15","hashOfConfig":"14"},{"size":425,"mtime":1609784261681,"results":"16","hashOfConfig":"14"},{"size":2545,"mtime":1610049365922,"results":"17","hashOfConfig":"14"},{"size":11177,"mtime":1610128820645,"results":"18","hashOfConfig":"14"},{"size":630,"mtime":1609959911303,"results":"19","hashOfConfig":"14"},{"size":1159,"mtime":1610127279931,"results":"20","hashOfConfig":"14"},{"size":1446,"mtime":1610053246049,"results":"21","hashOfConfig":"14"},{"size":1702,"mtime":1610128776381,"results":"22","hashOfConfig":"14"},{"size":726,"mtime":1610054174039,"results":"23","hashOfConfig":"14"},{"size":1907,"mtime":1610128827996,"results":"24","hashOfConfig":"14"},{"size":1102,"mtime":1610128841319,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w27dib",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\App.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\index.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\reportWebVitals.ts",["53"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectList.js",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListView.tsx",["54"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Interface imports\r\nimport { Project, ProjectMembership } from '../../types';\r\n\r\n// Internal imports\r\nimport { createLinkCell, createHeader, createCell, createDateCell } from '../utils';\r\n\r\ninterface ProjectListViewProps {\r\n    projects: Project[];\r\n}\r\n\r\ninterface ProjectFilterProps {\r\n    title: string;\r\n    handleTitleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    startDate: string;\r\n    handleStartDateChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    endDate: string;\r\n    handleEndDateChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    manager: string;\r\n    handleManagerChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n    viewingArchived: boolean;\r\n    handleViewingArchivedChange: () => void;\r\n    handleFilterReset: () => void;\r\n    uniqueManagers: string[];\r\n}\r\n// TODO: implement new project button\r\nconst ProjectListView: React.FunctionComponent<ProjectListViewProps> = ({\r\n    projects,\r\n}: ProjectListViewProps): React.ReactElement => {\r\n    // state hooks for ProjectFilter component\r\n    const [filteredProjects, setFilteredProjects] = React.useState(projects);\r\n    const [title, setTitle] = React.useState('');\r\n    const [startDate, setStartDate] = React.useState('');\r\n    const [endDate, setEndDate] = React.useState('');\r\n    const [manager, setManager] = React.useState('');\r\n    const [viewingArchived, setViewingArchived] = React.useState(false);\r\n\r\n    // Creates an array of all unique managers of all projects, to be passed to ProjectFilter's manager select element\r\n    const getUniqueManagers = (projects: Project[]): string[] => {\r\n        // get an array of all members\r\n        let allMembers: ProjectMembership[] = [];\r\n        projects.map((project) => {\r\n            allMembers = [...allMembers, ...project.memberships];\r\n        });\r\n\r\n        // filter array to only managers\r\n        const allManagers: ProjectMembership[] = allMembers.filter((membership) => membership.role_name === 'Manager');\r\n\r\n        // extract usernames from array of ProjectMembership objects\r\n        const usernames: string[] = allManagers.map((membership) => membership.user);\r\n\r\n        // get unique usernames\r\n        const uniqueUsernames: string[] = [...new Set(usernames)];\r\n\r\n        return uniqueUsernames;\r\n    };\r\n\r\n    // Filters project array based on values from ProjectFilter element\r\n    const filterProjects = (projects: Project[]): Project[] => {\r\n        const filteredProjects: Project[] = [];\r\n        projects.forEach((project) => {\r\n            const titleMatches = project.title.toLowerCase().indexOf(title.toLowerCase()) !== -1;\r\n            const managerMatches =\r\n                manager === '' ? true : project.manager && project.manager.toLowerCase() === manager.toLowerCase();\r\n            const startDateMatches = new Date(project.created) >= new Date(startDate) || startDate === '';\r\n            const endDateMatches = new Date(project.created) <= new Date(endDate) || endDate === '';\r\n            const viewingArchivedMatches = project.is_archived === viewingArchived;\r\n            const allFiltersMatch =\r\n                titleMatches && managerMatches && startDateMatches && endDateMatches && viewingArchivedMatches;\r\n            if (allFiltersMatch) {\r\n                filteredProjects.push(project);\r\n            }\r\n        });\r\n        return filteredProjects;\r\n    };\r\n\r\n    // calls filterProjects when state changes based on input values from ProjectFilter, then sets the newly filtered projects to state\r\n    React.useEffect(() => {\r\n        setFilteredProjects(filterProjects(projects));\r\n    }, [title, startDate, endDate, manager, viewingArchived]);\r\n\r\n    // Callback functions passed down to ProjectFilter to handle input changes\r\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const element = e.target as HTMLInputElement;\r\n        setTitle(element.value);\r\n    };\r\n\r\n    const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const element = e.target as HTMLInputElement;\r\n        setStartDate(element.value);\r\n    };\r\n\r\n    const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const element = e.target as HTMLInputElement;\r\n        setEndDate(element.value);\r\n    };\r\n\r\n    const handleManagerChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n        const element = e.target as HTMLSelectElement;\r\n        setManager(element.value);\r\n    };\r\n\r\n    const handleViewingArchivedChange = (): void => {\r\n        setViewingArchived(!viewingArchived);\r\n    };\r\n\r\n    const handleFilterReset = (): void => {\r\n        setTitle('');\r\n        setManager('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mx-auto py-4 px-2 w-auto\">\r\n            <h1 className=\"text-5xl text-blue-800 text-left\">Projects</h1>\r\n            <ProjectFilter\r\n                title={title}\r\n                handleTitleChange={handleTitleChange}\r\n                startDate={startDate}\r\n                handleStartDateChange={handleStartDateChange}\r\n                endDate={endDate}\r\n                handleEndDateChange={handleEndDateChange}\r\n                manager={manager}\r\n                handleManagerChange={handleManagerChange}\r\n                viewingArchived={viewingArchived}\r\n                handleViewingArchivedChange={handleViewingArchivedChange}\r\n                handleFilterReset={handleFilterReset}\r\n                uniqueManagers={getUniqueManagers(projects)}\r\n            />\r\n            <ProjectTable projects={filteredProjects} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProjectFilter: React.FunctionComponent<ProjectFilterProps> = ({\r\n    title,\r\n    handleTitleChange,\r\n    startDate,\r\n    handleStartDateChange,\r\n    endDate,\r\n    handleEndDateChange,\r\n    manager,\r\n    handleManagerChange,\r\n    viewingArchived,\r\n    handleViewingArchivedChange,\r\n    handleFilterReset,\r\n    uniqueManagers,\r\n}: ProjectFilterProps): React.ReactElement => {\r\n    return (\r\n        <div className=\"container shadow bg-gray-200 mt-3\">\r\n            <div className=\"my-2 grid grid-cols-1 md:grid-cols-10\">\r\n                <div className=\"text-left md:text-center md:col-span-2\">\r\n                    <label className=\"text-2xl text-gray-800\" htmlFor=\"title\">\r\n                        Title:\r\n                    </label>\r\n                    <input\r\n                        className=\"mx-1 border rounded-md focus:ring-2 outline-none bg-gray-300 text-gray-700\"\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        value={title}\r\n                        onChange={handleTitleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"text-left md:text-center md:col-span-2\">\r\n                    <label className=\"text-2xl text-gray-800\" htmlFor=\"start-date\">\r\n                        Start date:\r\n                    </label>\r\n                    <input\r\n                        className=\"mx-1 border rounded-md focus:ring-2 outline-none bg-gray-300 text-gray-700\"\r\n                        type=\"date\"\r\n                        id=\"start-date\"\r\n                        value={startDate}\r\n                        onChange={handleStartDateChange}\r\n                    />\r\n                </div>\r\n                <div className=\"text-left md:text-center md:col-span-2\">\r\n                    <label className=\"text-2xl text-gray-800\" htmlFor=\"end-date\">\r\n                        End date:\r\n                    </label>\r\n                    <input\r\n                        className=\"mx-1 border rounded-md focus:ring-2 outline-none bg-gray-300 text-gray-700\"\r\n                        type=\"date\"\r\n                        id=\"end-date\"\r\n                        value={endDate}\r\n                        onChange={handleEndDateChange}\r\n                    />\r\n                </div>\r\n                <div className=\"text-left md:text-center md:col-span-2\">\r\n                    <label className=\"text-2xl text-gray-800\" htmlFor=\"manager\">\r\n                        Manager:\r\n                    </label>\r\n                    <select\r\n                        name=\"manager\"\r\n                        id=\"manager\"\r\n                        className=\"mx-1 border rounded-md focus:ring-2 outline-none bg-gray-300 text-gray-700\"\r\n                        value={manager}\r\n                        onChange={handleManagerChange}\r\n                    >\r\n                        <option value=\"\"></option>\r\n                        {uniqueManagers.map((manager, index) => (\r\n                            <option key={index} value={manager}>\r\n                                {manager}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"text-left md:text-center md:col-span-1\">\r\n                    <button\r\n                        className=\"text-l text-gray-800 bg-gray-300 hover:bg-gray-400 border border-gray-800 px-2 rounded-sm mt-1\"\r\n                        onClick={handleFilterReset}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n                <div className=\"text-left md:text-center md:col-span-1\">\r\n                    <button\r\n                        className={\r\n                            viewingArchived\r\n                                ? 'text-l text-gray-800 bg-blue-300 hover:bg-blue-400 border border-blue-800 px-2 rounded-sm mt-1'\r\n                                : 'text-l text-gray-800 bg-blue-300 hover:bg-blue-400 border border-blue-800 px-2 rounded-sm mt-1'\r\n                        }\r\n                        onClick={handleViewingArchivedChange}\r\n                    >\r\n                        {viewingArchived ? 'View active' : 'View archived'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProjectTable: React.FunctionComponent<ProjectListViewProps> = ({\r\n    projects,\r\n}: ProjectListViewProps): React.ReactElement => {\r\n    const headers: string[] = ['Title', 'Description', 'Manager', 'Open Tickets', 'Created'];\r\n\r\n    return (\r\n        <table className=\"shadow-lg mt-1 w-full text-left\">\r\n            <thead>\r\n                <tr>{headers.map((header: string, index: number) => createHeader(header, index.toString()))}</tr>\r\n            </thead>\r\n            <tbody>\r\n                {projects.map((project) => {\r\n                    return (\r\n                        <tr key={project.slug}>\r\n                            {createLinkCell(project.title, `/projects/${project.slug}`)}\r\n                            {createCell(project.description)}\r\n                            {createCell(project.manager)}\r\n                            {createCell(project.open_tickets)}\r\n                            {createDateCell(project.created)}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default ProjectListView;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListContainer.tsx",["55"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailContainer.tsx",["56","57","58","59","60"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\ticketList.js",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailView.tsx",["61","62","63","64"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectDetail.js",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTable.tsx",["65","66","67"],"import React from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\n// Interface imports\r\nimport { Project, ProjectMembership, Ticket, Comment } from '../../types';\r\n\r\n// Internal imports\r\nimport { createLinkCell, createHeader, createCell, createDateCell } from '../utils';\r\n\r\ninterface TicketTableProps {\r\n    tickets: Ticket[];\r\n}\r\n\r\nconst TicketTable: React.FunctionComponent<TicketTableProps> = ({ tickets }: TicketTableProps): React.ReactElement => {\r\n    const { url } = useRouteMatch();\r\n\r\n    const getPriorityText = (priority: number): string => {\r\n        if (priority === 1) {\r\n            return 'Low';\r\n        } else if (priority === 2) {\r\n            return 'High';\r\n        } else {\r\n            return 'Urgent';\r\n        }\r\n    };\r\n\r\n    const headers: string[] = ['Title', 'User', 'Developer', 'Priority', 'Created', 'Updated'];\r\n\r\n    return (\r\n        <table className=\"shadow-lg mt-1 w-full text-left\">\r\n            <thead>\r\n                <tr>{headers.map((header: string, index: number) => createHeader(header, index.toString()))}</tr>\r\n            </thead>\r\n            <tbody>\r\n                {tickets.map((ticket) => {\r\n                    return (\r\n                        <tr key={ticket.slug}>\r\n                            {createLinkCell(ticket.title, `${url}/tickets/${ticket.slug}`)}\r\n                            {/* {createCell(ticket.title)} */}\r\n                            {createCell(ticket.user)}\r\n                            {ticket.developer ? createCell(ticket.developer) : createCell('')}\r\n                            {createCell(getPriorityText(ticket.priority))}\r\n                            {createDateCell(ticket.created)}\r\n                            {createDateCell(ticket.modified)}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default TicketTable;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\utils.tsx",["68"],{"ruleId":"69","severity":1,"message":"70","line":3,"column":25,"nodeType":"71","messageId":"72","endLine":3,"endColumn":57},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":16,"column":22,"nodeType":"75","messageId":"76","endLine":16,"endColumn":33},{"ruleId":"73","severity":1,"message":"78","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":19},{"ruleId":"73","severity":1,"message":"79","line":7,"column":27,"nodeType":"75","messageId":"76","endLine":7,"endColumn":34},{"ruleId":"69","severity":1,"message":"80","line":11,"column":33,"nodeType":"75","messageId":"81","endLine":11,"endColumn":43},{"ruleId":"82","severity":1,"message":"83","line":11,"column":40,"nodeType":"84","messageId":"85","endLine":11,"endColumn":43,"suggestions":"86"},{"ruleId":"73","severity":1,"message":"87","line":12,"column":25,"nodeType":"75","messageId":"76","endLine":12,"endColumn":44},{"ruleId":"73","severity":1,"message":"88","line":4,"column":19,"nodeType":"75","messageId":"76","endLine":4,"endColumn":36},{"ruleId":"73","severity":1,"message":"79","line":4,"column":46,"nodeType":"75","messageId":"76","endLine":4,"endColumn":53},{"ruleId":"73","severity":1,"message":"89","line":38,"column":51,"nodeType":"75","messageId":"76","endLine":38,"endColumn":62},{"ruleId":"73","severity":1,"message":"90","line":38,"column":64,"nodeType":"75","messageId":"76","endLine":38,"endColumn":75},{"ruleId":"73","severity":1,"message":"91","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":17},{"ruleId":"73","severity":1,"message":"88","line":5,"column":19,"nodeType":"75","messageId":"76","endLine":5,"endColumn":36},{"ruleId":"73","severity":1,"message":"79","line":5,"column":46,"nodeType":"75","messageId":"76","endLine":5,"endColumn":53},{"ruleId":"69","severity":1,"message":"70","line":27,"column":31,"nodeType":"71","messageId":"72","endLine":27,"endColumn":49},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setProjects' is assigned a value but never used.","'projectList' is defined but never used.","'Comment' is defined but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["92","93"],"'projectSlug' is defined but never used.","'ProjectMembership' is defined but never used.","'memberships' is assigned a value but never used.","'is_archived' is assigned a value but never used.","'Project' is defined but never used.",{"messageId":"94","fix":"95","desc":"96"},{"messageId":"97","fix":"98","desc":"99"},"suggestUnknown",{"range":"100","text":"101"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"100","text":"102"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[361,364],"unknown","never"]