[{"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\App.tsx":"1","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\index.tsx":"2","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\reportWebVitals.ts":"3","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectList.js":"4","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListView.tsx":"5","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListContainer.tsx":"6","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailContainer.tsx":"7","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\ticketList.js":"8","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailView.tsx":"9","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectDetail.js":"10","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTable.tsx":"11","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\utils.tsx":"12","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\types.ts":"13","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectTable.tsx":"14","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectFilter.tsx":"15","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketFilter.tsx":"16","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTableContainer.tsx":"17","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\AssignedDevelopersList.tsx":"18","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailContainer.tsx":"19","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailView.tsx":"20","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\ticketDetail.js":"21","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\CommentList.tsx":"22","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailClosingModal.tsx":"23","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\CreateTicketModalForm.tsx":"24","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\UpdateTicketModalForm.tsx":"25","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\teamList.js":"26","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\TeamListView.tsx":"27","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\TeamListContainer.tsx":"28","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\CreateTeamModalForm.tsx":"29","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\ManageTeam.tsx":"30","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\TeamMembersPanel.tsx":"31"},{"size":1414,"mtime":1610646589177,"results":"32","hashOfConfig":"33"},{"size":530,"mtime":1609788794223,"results":"34","hashOfConfig":"33"},{"size":425,"mtime":1609784261681,"results":"35","hashOfConfig":"33"},{"size":2545,"mtime":1610049365922,"results":"36","hashOfConfig":"33"},{"size":5497,"mtime":1610399752340,"results":"37","hashOfConfig":"33"},{"size":630,"mtime":1610133882566,"results":"38","hashOfConfig":"33"},{"size":1575,"mtime":1610477533829,"results":"39","hashOfConfig":"33"},{"size":1974,"mtime":1610479818352,"results":"40","hashOfConfig":"33"},{"size":2896,"mtime":1610478268348,"results":"41","hashOfConfig":"33"},{"size":922,"mtime":1610137758842,"results":"42","hashOfConfig":"33"},{"size":1667,"mtime":1610485957669,"results":"43","hashOfConfig":"33"},{"size":1976,"mtime":1610485827015,"results":"44","hashOfConfig":"33"},{"size":899,"mtime":1610052966386,"results":"45","hashOfConfig":"33"},{"size":1387,"mtime":1610485734498,"results":"46","hashOfConfig":"33"},{"size":5774,"mtime":1610322120043,"results":"47","hashOfConfig":"33"},{"size":1321,"mtime":1610322120046,"results":"48","hashOfConfig":"33"},{"size":2720,"mtime":1610322120047,"results":"49","hashOfConfig":"33"},{"size":2821,"mtime":1610322120042,"results":"50","hashOfConfig":"33"},{"size":2329,"mtime":1610480192853,"results":"51","hashOfConfig":"33"},{"size":3173,"mtime":1610479972232,"results":"52","hashOfConfig":"33"},{"size":880,"mtime":1610480000635,"results":"53","hashOfConfig":"33"},{"size":1447,"mtime":1610322120045,"results":"54","hashOfConfig":"33"},{"size":3689,"mtime":1610476697203,"results":"55","hashOfConfig":"33"},{"size":7611,"mtime":1610478268347,"results":"56","hashOfConfig":"33"},{"size":7648,"mtime":1610479622676,"results":"57","hashOfConfig":"33"},{"size":1239,"mtime":1610484947629,"results":"58","hashOfConfig":"33"},{"size":1907,"mtime":1610651150284,"results":"59","hashOfConfig":"33"},{"size":1144,"mtime":1610487147379,"results":"60","hashOfConfig":"33"},{"size":4184,"mtime":1610651212524,"results":"61","hashOfConfig":"33"},{"size":1615,"mtime":1610651182821,"results":"62","hashOfConfig":"33"},{"size":3016,"mtime":1610651326469,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w27dib",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\App.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\index.tsx",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\reportWebVitals.ts",["141"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectList.js",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListView.tsx",["142"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Interface imports\r\nimport { Project, ProjectMembership } from '../../types';\r\n\r\n// internal imports\r\nimport ProjectTable from './ProjectTable';\r\nimport ProjectFilter from './ProjectFilter';\r\n\r\ninterface ProjectListViewProps {\r\n    projects: Project[];\r\n}\r\n\r\n// TODO: implement new project button\r\nconst ProjectListView: React.FunctionComponent<ProjectListViewProps> = ({\r\n    projects,\r\n}: ProjectListViewProps): React.ReactElement => {\r\n    // state hooks for ProjectFilter component\r\n    const [filteredProjects, setFilteredProjects] = React.useState(projects);\r\n    const [title, setTitle] = React.useState('');\r\n    const [startDate, setStartDate] = React.useState('');\r\n    const [endDate, setEndDate] = React.useState('');\r\n    const [manager, setManager] = React.useState('');\r\n    const [viewingArchived, setViewingArchived] = React.useState(false);\r\n\r\n    // Creates an array of all unique managers of all projects, to be passed to ProjectFilter's manager select element\r\n    const getUniqueManagers = (projects: Project[]): string[] => {\r\n        // get an array of all members\r\n        let allMembers: ProjectMembership[] = [];\r\n        projects.map((project) => {\r\n            allMembers = [...allMembers, ...project.memberships];\r\n        });\r\n\r\n        // filter array to only managers\r\n        const allManagers: ProjectMembership[] = allMembers.filter((membership) => membership.role_name === 'Manager');\r\n\r\n        // extract usernames from array of ProjectMembership objects\r\n        const usernames: string[] = allManagers.map((membership) => membership.user);\r\n\r\n        // get unique usernames\r\n        const uniqueUsernames: string[] = [...new Set(usernames)];\r\n\r\n        return uniqueUsernames;\r\n    };\r\n\r\n    // Filters project array based on values from ProjectFilter element\r\n    const filterProjects = (projects: Project[]): Project[] => {\r\n        const filteredProjects: Project[] = [];\r\n        projects.forEach((project) => {\r\n            const titleMatches = project.title.toLowerCase().indexOf(title.toLowerCase()) !== -1;\r\n            const managerMatches =\r\n                manager === '' ? true : project.manager && project.manager.toLowerCase() === manager.toLowerCase();\r\n            const startDateMatches = new Date(project.created) >= new Date(startDate) || startDate === '';\r\n            const endDateMatches = new Date(project.created) <= new Date(endDate) || endDate === '';\r\n            const viewingArchivedMatches = project.is_archived === viewingArchived;\r\n            const allFiltersMatch =\r\n                titleMatches && managerMatches && startDateMatches && endDateMatches && viewingArchivedMatches;\r\n            if (allFiltersMatch) {\r\n                filteredProjects.push(project);\r\n            }\r\n        });\r\n        return filteredProjects;\r\n    };\r\n\r\n    // calls filterProjects when state changes based on input values from ProjectFilter, then sets the newly filtered projects to state\r\n    React.useEffect(() => {\r\n        setFilteredProjects(filterProjects(projects));\r\n    }, [title, startDate, endDate, manager, viewingArchived]);\r\n\r\n    // Callback functions passed down to ProjectFilter to handle input changes\r\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const element = e.target as HTMLInputElement;\r\n        setTitle(element.value);\r\n    };\r\n\r\n    const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const element = e.target as HTMLInputElement;\r\n        setStartDate(element.value);\r\n    };\r\n\r\n    const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const element = e.target as HTMLInputElement;\r\n        setEndDate(element.value);\r\n    };\r\n\r\n    const handleManagerChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n        const element = e.target as HTMLSelectElement;\r\n        setManager(element.value);\r\n    };\r\n\r\n    const handleViewingArchivedChange = (): void => {\r\n        setViewingArchived(!viewingArchived);\r\n    };\r\n\r\n    const handleFilterReset = (): void => {\r\n        setTitle('');\r\n        setManager('');\r\n        setStartDate('');\r\n        setEndDate('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"block\">\r\n                <h1 className=\"title is-1 has-text-grey-dark\">\r\n                    {viewingArchived ? 'Archived Projects' : 'Projects'}\r\n                </h1>\r\n            </div>\r\n\r\n            <div className=\"block\">\r\n                <ProjectFilter\r\n                    title={title}\r\n                    handleTitleChange={handleTitleChange}\r\n                    startDate={startDate}\r\n                    handleStartDateChange={handleStartDateChange}\r\n                    endDate={endDate}\r\n                    handleEndDateChange={handleEndDateChange}\r\n                    manager={manager}\r\n                    handleManagerChange={handleManagerChange}\r\n                    viewingArchived={viewingArchived}\r\n                    handleViewingArchivedChange={handleViewingArchivedChange}\r\n                    handleFilterReset={handleFilterReset}\r\n                    uniqueManagers={getUniqueManagers(projects)}\r\n                />\r\n            </div>\r\n            <div className=\"block\">\r\n                <ProjectTable projects={filteredProjects} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectListView;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectListContainer.tsx",["143"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailContainer.tsx",["144","145","146"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\ticketList.js",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailView.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\projectDetail.js",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTable.tsx",["147","148","149","150"],"import React from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\n// Interface imports\r\nimport { Project, ProjectMembership, Ticket, Comment } from '../../types';\r\n\r\n// Internal imports\r\nimport {\r\n    createLinkCell,\r\n    createHeader,\r\n    createCell,\r\n    createDateCell,\r\n    createElapsedTimeCell,\r\n    getPriorityText,\r\n} from '../utils';\r\n\r\ninterface TicketTableProps {\r\n    tickets: Ticket[];\r\n}\r\n\r\nconst TicketTable: React.FunctionComponent<TicketTableProps> = ({ tickets }: TicketTableProps): React.ReactElement => {\r\n    const { url } = useRouteMatch();\r\n\r\n    const headers: string[] = ['Title', 'User', 'Developer', 'Priority', 'Created', 'Updated'];\r\n\r\n    return (\r\n        <table className=\"table shadow-lg mt-1 w-full text-left\">\r\n            <thead>\r\n                <tr>{headers.map((header: string, index: number) => createHeader(header, index.toString()))}</tr>\r\n            </thead>\r\n            <tbody>\r\n                {tickets.map((ticket) => {\r\n                    return (\r\n                        <tr key={ticket.slug}>\r\n                            {createLinkCell(ticket.title, `tickets/${ticket.slug}`)}\r\n                            {createCell(ticket.user)}\r\n                            {ticket.developer ? createCell(ticket.developer) : createCell('')}\r\n                            {createCell(getPriorityText(ticket.priority))}\r\n                            {createDateCell(ticket.created)}\r\n                            {createElapsedTimeCell(ticket.modified)}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default TicketTable;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\utils.tsx",["151","152","153"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment'\r\nmoment().format();\r\n\r\n// Utility functions for constructing tables\r\nexport const createLinkCell = (value: string, href: string): React.ReactElement => {\r\n    return (\r\n        <td className=\"border border-gray-300 py-2 px-1 bg-gray-100 text-blue-500\">\r\n            <Link to={location => `${location.pathname}/${href}`} className=\"hover:text-blue-600\">\r\n                {value}\r\n            </Link>\r\n        </td>\r\n    );\r\n};\r\n\r\nexport const createHeader = (header: string, index: string): React.ReactElement => {\r\n    return (\r\n        <th key={index.toString()} className=\"border border-blue-300 px-1 py-2 bg-blue-200 text-blue-900\">\r\n            {header}\r\n        </th>\r\n    );\r\n};\r\n\r\nexport const createCell = (value: string | number | null): React.ReactElement => {\r\n    return <td className=\"border border-gray-300 py-2 px-1 bg-gray-100 text-gray-500\">{value}</td>;\r\n};\r\n\r\nexport const createDateCell = (value: string) => {\r\n    const date = new Date(value);\r\n    return <td className=\"border border-gray-300 py-2 px-1 bg-gray-100 text-gray-500\">{date.toLocaleDateString()}</td>;\r\n};\r\n\r\nexport const createElapsedTimeCell = (value: string) => {\r\n    const date = new Date(value);\r\n    const momentDate = moment(date);\r\n    return <td className=\"border border-gray-300 py-2 px-1 bg-gray-100 text-gray-500\">{momentDate.fromNow()}</td>;\r\n}\r\n\r\n// converts a Ticket's priority number into the proper text\r\nexport const getPriorityText = (priority: number): string => {\r\n    if (priority === 1) {\r\n        return 'Low';\r\n    } else if (priority === 2) {\r\n        return 'High';\r\n    } else {\r\n        return 'Urgent';\r\n    }\r\n};\r\n\r\n// converts a date string to a \"updated x minutes ago\" or whatever string\r\nexport const getLastUpdatedString = (date: string) => {\r\n    const dateObj = new Date(date);\r\n    const momentDate = moment(dateObj);\r\n    return momentDate.fromNow();\r\n};","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\types.ts",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectTable.tsx",["154"],"import React from 'react';\r\n\r\n// Interface imports\r\nimport { Project, ProjectMembership } from '../../types';\r\n\r\n// Internal imports\r\nimport { createLinkCell, createHeader, createCell, createDateCell } from '../utils';\r\n\r\ninterface ProjectTableProps {\r\n    projects: Project[];\r\n}\r\n\r\nconst ProjectTable: React.FunctionComponent<ProjectTableProps> = ({\r\n    projects,\r\n}: ProjectTableProps): React.ReactElement => {\r\n    const headers: string[] = ['Title', 'Description', 'Manager', 'Open Tickets', 'Created'];\r\n\r\n    return (\r\n        <table className=\"table shadow-lg mt-1 w-full text-left\">\r\n            <thead>\r\n                <tr>{headers.map((header: string, index: number) => createHeader(header, index.toString()))}</tr>\r\n            </thead>\r\n            <tbody>\r\n                {projects.map((project) => {\r\n                    return (\r\n                        <tr key={project.slug}>\r\n                            {createLinkCell(project.title, `${project.slug}`)}\r\n                            {createCell(project.description)}\r\n                            {createCell(project.manager)}\r\n                            {createCell(project.open_tickets)}\r\n                            {createDateCell(project.created)}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default ProjectTable;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectFilter.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketFilter.tsx",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTableContainer.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\AssignedDevelopersList.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailContainer.tsx",["155","156"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailView.tsx",["157","158"],"import React from 'react';\r\n\r\n// interfaces\r\nimport { Ticket, NewOrUpdatedTicketProps, Project } from '../../types';\r\n\r\n// internal imports\r\nimport CommentList from './CommentList';\r\nimport { getPriorityText, getLastUpdatedString } from '../utils';\r\nimport projectList from '../../fakeAPI/projectList';\r\nimport TicketDetailClosingModal from './TicketDetailClosingModal';\r\nimport UpdateTicketModalForm from './UpdateTicketModalForm'\r\nimport { Z_BLOCK } from 'zlib';\r\n\r\ninterface TicketDetailViewProps {\r\n    ticket: Ticket;\r\n    project: Project;\r\n    closeTicket: (ticketSlug: string) => void;\r\n    updateTicket: (updatedTicket: NewOrUpdatedTicketProps) => void;\r\n}\r\n\r\ninterface TicketDetailPaneProps {\r\n    ticket: Ticket;\r\n    project: Project;\r\n    closeTicket: (ticketSlug: string) => void;\r\n    updateTicket: (updatedTicket: NewOrUpdatedTicketProps) => void;\r\n}\r\n\r\nconst TicketDetailView: React.FunctionComponent<TicketDetailViewProps> = ({\r\n    ticket,\r\n    project,\r\n    closeTicket,\r\n    updateTicket,\r\n}: TicketDetailViewProps): React.ReactElement => {\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <TicketDetailPane ticket={ticket} updateTicket={updateTicket} closeTicket={closeTicket} project={project} />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <CommentList comments={ticket.comments} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TicketDetailPane: React.FunctionComponent<TicketDetailPaneProps> = ({\r\n    ticket,\r\n    project,\r\n    closeTicket,\r\n    updateTicket,\r\n}: TicketDetailPaneProps): React.ReactElement => {\r\n    const { title, description, user, priority, is_open, created, modified, resolution, developer } = ticket;\r\n\r\n    return (\r\n        <div className=\"panel is-info\">\r\n            <p className=\"panel-heading\">{title}</p>\r\n            {description && <p className=\"panel-block\">{description}</p>}\r\n            <p className=\"panel-block\">{`Submitted by ${user}`}</p>\r\n            <p className=\"panel-block\">{`Priority: ${getPriorityText(priority)}`}</p>\r\n            <p className=\"panel-block\">{is_open ? 'Status: open' : 'Status: closed'}</p>\r\n            <p className=\"panel-block\">{`Submitted on ${new Date(created).toLocaleDateString()}`}</p>\r\n            <p className=\"panel-block\">{`Last updated ${getLastUpdatedString(modified)}`}</p>\r\n            {developer && <p className=\"panel-block\"><strong>Assigned to {developer}</strong></p>}\r\n            <nav className=\"level\">\r\n                <div className=\"level-left\">\r\n                    <div className=\"level-item ml-3\">\r\n                        <UpdateTicketModalForm ticket={ticket} updateTicket={updateTicket} projectMembers={project.memberships} />\r\n                    </div>\r\n                    <div className=\"level-item\">\r\n                        <TicketDetailClosingModal isOpen={is_open} resolution={resolution} closeTicket={closeTicket} />\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TicketDetailView;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\ticketDetail.js",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\CommentList.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailClosingModal.tsx",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\CreateTicketModalForm.tsx",["159","160"],"import { parse } from 'postcss';\r\nimport React, { Fragment } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n// interface imports\r\nimport { ProjectMembership, NewOrUpdatedTicketProps } from '../../types';\r\n\r\ninterface CreateTicketModalFormProps {\r\n    projectMembers: ProjectMembership[];\r\n    createTicket: (newTicket: NewOrUpdatedTicketProps) => void;\r\n}\r\n\r\ninterface ParamTypes {\r\n    projectSlug: string;\r\n}\r\n\r\nconst CreateTicketModalForm: React.FunctionComponent<CreateTicketModalFormProps> = ({\r\n    projectMembers,\r\n    createTicket,\r\n}: CreateTicketModalFormProps): React.ReactElement => {\r\n    // getting the projectSlug from the URL\r\n    const { projectSlug } = useParams<ParamTypes>();\r\n\r\n    // state for form data\r\n    const [title, setTitle] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [developer, setDeveloper] = React.useState('');\r\n    const [priority, setPriority] = React.useState('');\r\n\r\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const handleDeveloperChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setDeveloper(e.target.value);\r\n    };\r\n\r\n    const handlePriorityChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setPriority(e.target.value);\r\n    };\r\n\r\n    // state for whether the modal is active or not\r\n    const [isActive, setIsActive] = React.useState(false);\r\n\r\n    const handleToggleIsActive = () => {\r\n        setIsActive(!isActive);\r\n    };\r\n\r\n    // submitting form data\r\n    const handleSubmit = () => {\r\n        const convertPriorityToNumber = (priority: string): number => {\r\n            if (priority === 'Low') {\r\n                return 1;\r\n            } else if (priority === 'High') {\r\n                return 2;\r\n            } else {\r\n                return 3;\r\n            }\r\n        };\r\n\r\n        const newTicket = {\r\n            title: title,\r\n            description: description,\r\n            developer: developer,\r\n            priority: convertPriorityToNumber(priority),\r\n            project: projectSlug,\r\n        };\r\n        createTicket(newTicket);\r\n        setIsActive(false);\r\n    };\r\n\r\n    const createDevelopersOptionsList = (members: ProjectMembership[]): React.ReactElement => {\r\n        const developers: string[] = members\r\n            .filter((member) => {\r\n                return member.role_name == 'Developer';\r\n            })\r\n            .map((developer) => developer.user);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"select\">\r\n                    <select value={developer} onChange={handleDeveloperChange}>\r\n                        <option value=\"\" selected disabled>\r\n                            Assign a developer (optional)\r\n                        </option>\r\n                        {developers.map((developer) => (\r\n                            <option key={developer} value={developer}>\r\n                                {developer}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <button className=\"button is-primary\" onClick={handleToggleIsActive}>\r\n                Submit Ticket\r\n            </button>\r\n\r\n            <div className={isActive ? 'modal is-active' : 'modal'}>\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">Submit Ticket</p>\r\n                        <button className=\"delete\" aria-label=\"close\" onClick={handleToggleIsActive}></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\">\r\n                        {/* Title Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Title</label>\r\n                            <div className=\"control\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={!title ? 'input is-danger' : 'input'}\r\n                                    value={title}\r\n                                    onChange={handleTitleChange}\r\n                                />\r\n                            </div>\r\n                            {!title && <p className=\"help is-danger\">Title is required.</p>}\r\n                        </div>\r\n\r\n                        {/* Description Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Description</label>\r\n                            <div className=\"control\">\r\n                                <textarea\r\n                                    className=\"textarea\"\r\n                                    value={description}\r\n                                    onChange={handleDescriptionChange}\r\n                                ></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Developer Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Developer</label>\r\n                            <div className=\"control\">{createDevelopersOptionsList(projectMembers)}</div>\r\n                        </div>\r\n\r\n                        {/* Priority Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Priority</label>\r\n                            <div className=\"control\">\r\n                                <div className={!priority ? 'select is-danger' : 'select'}>\r\n                                    <select value={priority} onChange={handlePriorityChange}>\r\n                                        <option selected disabled value=\"\">\r\n                                            Select priority\r\n                                        </option>\r\n                                        <option>Low</option>\r\n                                        <option>High</option>\r\n                                        <option>Urgent</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {!priority && <p className=\"help is-danger\">Priority is required.</p>}\r\n                        </div>\r\n                    </section>\r\n                    <footer className=\"modal-card-foot\">\r\n                        {!title || !priority ? (\r\n                            <button className=\"button is-success\" disabled onClick={handleSubmit}>\r\n                                Submit\r\n                            </button>\r\n                        ) : (\r\n                            <button className=\"button is-success\" onClick={handleSubmit}>\r\n                                Submit\r\n                            </button>\r\n                        )}\r\n\r\n                        <button className=\"button\" onClick={handleToggleIsActive}>\r\n                            Cancel\r\n                        </button>\r\n                    </footer>\r\n                </div>\r\n                <button className=\"modal-close is-large\" onClick={handleToggleIsActive}></button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CreateTicketModalForm;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\UpdateTicketModalForm.tsx",["161"],"import React, { Fragment } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n// interface imports\r\nimport { ProjectMembership, NewOrUpdatedTicketProps, Ticket } from '../../types';\r\n\r\ninterface UpdateTicketModalFormProps {\r\n    ticket: Ticket;\r\n    projectMembers: ProjectMembership[];\r\n    updateTicket: (updatedTicket: NewOrUpdatedTicketProps) => void;\r\n}\r\n\r\ninterface ParamTypes {\r\n    projectSlug: string;\r\n}\r\n\r\nconst UpdateTicketModalForm: React.FunctionComponent<UpdateTicketModalFormProps> = ({\r\n    ticket,\r\n    projectMembers,\r\n    updateTicket,\r\n}: UpdateTicketModalFormProps): React.ReactElement => {\r\n    // getting the projectSlug from the URL\r\n    const { projectSlug } = useParams<ParamTypes>();\r\n\r\n    // state for form data\r\n    const [title, setTitle] = React.useState(ticket.title);\r\n    const [description, setDescription] = React.useState(ticket.description);\r\n    const [developer, setDeveloper] = React.useState(ticket.developer);\r\n    const [priority, setPriority] = React.useState(ticket.priority);\r\n\r\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const handleDeveloperChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setDeveloper(e.target.value);\r\n    };\r\n\r\n    const handlePriorityChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setPriority(convertPriorityToNumber(e.target.value));\r\n    };\r\n\r\n    // state for whether the modal is active or not\r\n    const [isActive, setIsActive] = React.useState(false);\r\n\r\n    const handleToggleIsActive = () => {\r\n        setIsActive(!isActive);\r\n    };\r\n\r\n    const convertPriorityToNumber = (priority: string): number => {\r\n        if (priority === 'Low') {\r\n            return 1;\r\n        } else if (priority === 'High') {\r\n            return 2;\r\n        } else {\r\n            return 3;\r\n        }\r\n    };\r\n\r\n    // submitting form data\r\n    const handleSubmit = () => {\r\n        const updatedTicket = {\r\n            title: title,\r\n            description: description,\r\n            developer: developer,\r\n            priority: priority,\r\n            project: projectSlug,\r\n        };\r\n        updateTicket(updatedTicket);\r\n        setIsActive(false);\r\n    };\r\n\r\n    const createDevelopersOptionsList = (members: ProjectMembership[]): React.ReactElement => {\r\n        const developers: string[] = members\r\n            .filter((member) => {\r\n                return member.role_name == 'Developer';\r\n            })\r\n            .map((developer) => developer.user);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"select\">\r\n                    <select value={developer} onChange={handleDeveloperChange}>\r\n                        <option value=\"\" selected disabled>\r\n                            Assign a developer (optional)\r\n                        </option>\r\n                        {developers.map((developer) => (\r\n                            <option key={developer} value={developer}>\r\n                                {developer}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <button className=\"button is-primary\" onClick={handleToggleIsActive}>\r\n                Update Ticket\r\n            </button>\r\n\r\n            <div className={isActive ? 'modal is-active' : 'modal'}>\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">Submit Ticket</p>\r\n                        <button className=\"delete\" aria-label=\"close\" onClick={handleToggleIsActive}></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\">\r\n                        {/* Title Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Title</label>\r\n                            <div className=\"control\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={!title ? 'input is-danger' : 'input'}\r\n                                    value={title}\r\n                                    onChange={handleTitleChange}\r\n                                />\r\n                            </div>\r\n                            {!title && <p className=\"help is-danger\">Title is required.</p>}\r\n                        </div>\r\n\r\n                        {/* Description Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Description</label>\r\n                            <div className=\"control\">\r\n                                <textarea\r\n                                    className=\"textarea\"\r\n                                    value={description}\r\n                                    onChange={handleDescriptionChange}\r\n                                ></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Developer Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Developer</label>\r\n                            <div className=\"control\">{createDevelopersOptionsList(projectMembers)}</div>\r\n                        </div>\r\n\r\n                        {/* Priority Field */}\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Priority</label>\r\n                            <div className=\"control\">\r\n                                <div className={!priority ? 'select is-danger' : 'select'}>\r\n                                    <select value={priority} onChange={handlePriorityChange}>\r\n                                        <option selected disabled value=\"\">\r\n                                            Select priority\r\n                                        </option>\r\n                                        <option>Low</option>\r\n                                        <option>High</option>\r\n                                        <option>Urgent</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {!priority && <p className=\"help is-danger\">Priority is required.</p>}\r\n                        </div>\r\n                    </section>\r\n                    <footer className=\"modal-card-foot\">\r\n                        {!title || !priority ? (\r\n                            <button className=\"button is-success\" disabled onClick={handleSubmit}>\r\n                                Submit\r\n                            </button>\r\n                        ) : (\r\n                            <button className=\"button is-success\" onClick={handleSubmit}>\r\n                                Submit\r\n                            </button>\r\n                        )}\r\n\r\n                        <button className=\"button\" onClick={handleToggleIsActive}>\r\n                            Cancel\r\n                        </button>\r\n                    </footer>\r\n                </div>\r\n                <button className=\"modal-close is-large\" onClick={handleToggleIsActive}></button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UpdateTicketModalForm;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\fakeAPI\\teamList.js",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\TeamListView.tsx",["162"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\TeamListContainer.tsx",["163"],"import React from 'react';\r\nimport teamList from '../../fakeAPI/teamList';\r\nimport toast from 'react-hot-toast'\r\n\r\n// interfaces\r\nimport { Team, NewTeamProps } from '../../types';\r\n\r\n// internal imports\r\nimport TeamListView from './TeamListView'\r\nimport CreateTeamModalForm from './CreateTeamModalForm'\r\n\r\nconst TeamListContainer = (): React.ReactElement => {\r\n    const getTeams = (): Team[] => {\r\n        // TODO: this is where the API call to get a user's teams will live\r\n        return teamList;\r\n    };\r\n\r\n    const createTeam = (newTeam: NewTeamProps): void => {\r\n        // TODO: This is where the API call to submit a new team POST request will live\r\n        console.log('New Team')\r\n        console.log(newTeam)\r\n        toast.success('New team created!')\r\n    }\r\n\r\n    const [teams, setTeams] = React.useState(getTeams());\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"block\">\r\n            <TeamListView teams={teams} /></div>\r\n            <div className=\"block\">\r\n            <CreateTeamModalForm createTeam={createTeam} /></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeamListContainer;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\CreateTeamModalForm.tsx",["164"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\ManageTeam.tsx",["165"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\TeamMembersPanel.tsx",[],{"ruleId":"166","severity":1,"message":"167","line":3,"column":25,"nodeType":"168","messageId":"169","endLine":3,"endColumn":57},{"ruleId":"170","severity":1,"message":"171","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"174","line":16,"column":22,"nodeType":"172","messageId":"173","endLine":16,"endColumn":33},{"ruleId":"166","severity":1,"message":"175","line":11,"column":33,"nodeType":"172","messageId":"176","endLine":11,"endColumn":43},{"ruleId":"177","severity":1,"message":"178","line":11,"column":40,"nodeType":"179","messageId":"180","endLine":11,"endColumn":43,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"182","line":12,"column":25,"nodeType":"172","messageId":"173","endLine":12,"endColumn":44},{"ruleId":"170","severity":1,"message":"183","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":17},{"ruleId":"170","severity":1,"message":"184","line":5,"column":19,"nodeType":"172","messageId":"173","endLine":5,"endColumn":36},{"ruleId":"170","severity":1,"message":"185","line":5,"column":46,"nodeType":"172","messageId":"173","endLine":5,"endColumn":53},{"ruleId":"170","severity":1,"message":"186","line":22,"column":13,"nodeType":"172","messageId":"173","endLine":22,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":29,"column":31,"nodeType":"168","messageId":"169","endLine":29,"endColumn":49},{"ruleId":"166","severity":1,"message":"167","line":34,"column":38,"nodeType":"168","messageId":"169","endLine":34,"endColumn":56},{"ruleId":"166","severity":1,"message":"167","line":52,"column":37,"nodeType":"168","messageId":"169","endLine":52,"endColumn":54},{"ruleId":"170","severity":1,"message":"184","line":4,"column":19,"nodeType":"172","messageId":"173","endLine":4,"endColumn":36},{"ruleId":"166","severity":1,"message":"175","line":11,"column":32,"nodeType":"172","messageId":"176","endLine":11,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":11,"column":39,"nodeType":"179","messageId":"180","endLine":11,"endColumn":42,"suggestions":"187"},{"ruleId":"170","severity":1,"message":"188","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":19},{"ruleId":"170","severity":1,"message":"189","line":12,"column":10,"nodeType":"172","messageId":"173","endLine":12,"endColumn":17},{"ruleId":"170","severity":1,"message":"190","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":15},{"ruleId":"170","severity":1,"message":"191","line":3,"column":21,"nodeType":"172","messageId":"173","endLine":3,"endColumn":31},{"ruleId":"170","severity":1,"message":"191","line":2,"column":21,"nodeType":"172","messageId":"173","endLine":2,"endColumn":31},{"ruleId":"170","severity":1,"message":"192","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":18},{"ruleId":"170","severity":1,"message":"193","line":25,"column":19,"nodeType":"172","messageId":"173","endLine":25,"endColumn":27},{"ruleId":"170","severity":1,"message":"194","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"195","line":6,"column":16,"nodeType":"172","messageId":"173","endLine":6,"endColumn":30},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setProjects' is assigned a value but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["196","197"],"'projectSlug' is defined but never used.","'Project' is defined but never used.","'ProjectMembership' is defined but never used.","'Comment' is defined but never used.","'url' is assigned a value but never used.",["198","199"],"'projectList' is defined but never used.","'Z_BLOCK' is defined but never used.","'parse' is defined but never used.","'useHistory' is defined but never used.","'ManageTeam' is defined but never used.","'setTeams' is assigned a value but never used.","'Team' is defined but never used.","'TeamMembership' is defined but never used.",{"messageId":"200","fix":"201","desc":"202"},{"messageId":"203","fix":"204","desc":"205"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"203","fix":"207","desc":"205"},"suggestUnknown",{"range":"208","text":"209"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"208","text":"210"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"211","text":"209"},{"range":"211","text":"210"},[353,356],"unknown","never",[362,365]]