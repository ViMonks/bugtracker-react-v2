[{"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\auth\\PrivateRoute.jsx":"1","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\CreateProjectModalForm.tsx":"2","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailView.tsx":"3","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\types.ts":"4","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\AssignedDevelopersList.tsx":"5","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\CreateTicketModalForm.tsx":"6","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\UpdateTicketModalForm.tsx":"7","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailView.tsx":"8","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\index.tsx":"9","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\App.tsx":"10","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\LoadingBar.tsx":"11","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\AdminsTeamMembersPanel.tsx":"12","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\LeaveTeamModal.tsx":"13","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\context\\TeamContextDEPRECATED.jsx":"14","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTableContainer.tsx":"15","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectFilter.tsx":"16","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailContainer.tsx":"17","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\InviteUserToTeamModal.tsx":"18","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\auth\\Dashboard.jsx":"19","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\auth\\FirebaseUI.jsx":"20","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\context\\AuthContext.jsx":"21","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectTable.tsx":"22","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketFilter.tsx":"23","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTableRow.tsx":"24","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\NavBar.tsx":"25","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\API\\MyQueryClientProvider.jsx":"26","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\API\\FirebaseAPI.js":"27","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\utils.tsx":"28","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ManageProjectMembers.tsx":"29"},{"size":496,"mtime":1610906143836,"results":"30","hashOfConfig":"31"},{"size":7189,"mtime":1611352321140,"results":"32","hashOfConfig":"31"},{"size":6760,"mtime":1611353080275,"results":"33","hashOfConfig":"31"},{"size":2060,"mtime":1611353373607,"results":"34","hashOfConfig":"31"},{"size":2923,"mtime":1611352724202,"results":"35","hashOfConfig":"31"},{"size":8726,"mtime":1611353145069,"results":"36","hashOfConfig":"31"},{"size":8653,"mtime":1611354716684,"results":"37","hashOfConfig":"31"},{"size":4339,"mtime":1611353536666,"results":"38","hashOfConfig":"31"},{"size":530,"mtime":1609788794223,"results":"39","hashOfConfig":"31"},{"size":3267,"mtime":1611506981190,"results":"40","hashOfConfig":"31"},{"size":232,"mtime":1611349863769,"results":"41","hashOfConfig":"31"},{"size":9891,"mtime":1611349863779,"results":"42","hashOfConfig":"31"},{"size":2554,"mtime":1611349863780,"results":"43","hashOfConfig":"31"},{"size":1084,"mtime":1611349863771,"results":"44","hashOfConfig":"31"},{"size":2812,"mtime":1611349863788,"results":"45","hashOfConfig":"31"},{"size":5774,"mtime":1610322120043,"results":"46","hashOfConfig":"31"},{"size":3346,"mtime":1611358417989,"results":"47","hashOfConfig":"31"},{"size":2564,"mtime":1611358849941,"results":"48","hashOfConfig":"31"},{"size":734,"mtime":1610906143834,"results":"49","hashOfConfig":"31"},{"size":602,"mtime":1610906143834,"results":"50","hashOfConfig":"31"},{"size":1233,"mtime":1611349863770,"results":"51","hashOfConfig":"31"},{"size":946,"mtime":1611349863776,"results":"52","hashOfConfig":"31"},{"size":1321,"mtime":1610322120046,"results":"53","hashOfConfig":"31"},{"size":1603,"mtime":1611349863788,"results":"54","hashOfConfig":"31"},{"size":3754,"mtime":1611507139922,"results":"55","hashOfConfig":"31"},{"size":324,"mtime":1611349863768,"results":"56","hashOfConfig":"31"},{"size":15144,"mtime":1611349863768,"results":"57","hashOfConfig":"31"},{"size":2342,"mtime":1610913137705,"results":"58","hashOfConfig":"31"},{"size":5616,"mtime":1611349863772,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"w27dib",{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\auth\\PrivateRoute.jsx",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\CreateProjectModalForm.tsx",["131","132","133","134","135"],"import React, { Fragment } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { getTeamDetails, createProject } from '../API/FirebaseAPI';\r\n\r\n// interface imports\r\nimport { NewOrUpdatedProjectProps, TeamMembership } from '../../types';\r\n\r\ninterface ParamTypes {\r\n    teamSlug: string;\r\n}\r\n\r\nconst CreateProjectModalForm: React.FunctionComponent = (): React.ReactElement => {\r\n    const [isActive, setIsActive] = React.useState(false);\r\n    const { teamSlug } = useParams<ParamTypes>();\r\n    const { isLoading, error, data: team } = useQuery<any, Error>(\r\n        ['teamDetails', { teamSlug }],\r\n        () => getTeamDetails({ teamSlug }),\r\n        { staleTime: 30000 },\r\n    );\r\n\r\n    // form data\r\n    const [title, setTitle] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [manager, setManager] = React.useState('');\r\n    const history = useHistory()\r\n\r\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const handleManagerChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setManager(e.target.value);\r\n    };\r\n\r\n    const queryClient = useQueryClient();\r\n    const mutation = useMutation(createProject, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries();\r\n            queryClient.refetchQueries({ stale: true });            \r\n            toast.success('New project created!');\r\n            // history.push(data.data.slug)\r\n        },\r\n        onError: (error: any) => {\r\n            toast.error(error.message);\r\n        },\r\n    });\r\n    const handleSubmit = () => {\r\n        let newProject;\r\n        if (manager) {\r\n            newProject = {\r\n                title: title,\r\n                description: description,\r\n                manager: manager,\r\n            };\r\n        } else {\r\n            newProject = {\r\n                title: title,\r\n                description: description,\r\n            };\r\n        }\r\n        mutation.mutate({ teamSlug, newProject });\r\n        setIsActive(false);\r\n    };\r\n\r\n    const createManagersOptionsList = (members: TeamMembership[]): React.ReactElement => {\r\n        const memberUsernames: string[] = members.map((member) => member.user);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"select\">\r\n                    <select value={manager} onChange={handleManagerChange}>\r\n                        <option value=\"\" selected disabled>\r\n                            Assign a manager (optional)\r\n                        </option>\r\n                        {memberUsernames.map((member) => (\r\n                            <option key={member} value={member}>\r\n                                {member}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <button\r\n                className={isLoading ? 'button is-primary is-loading' : 'button is-primary'}\r\n                onClick={() => setIsActive(!isActive)}\r\n            >\r\n                Create New Project\r\n            </button>\r\n\r\n            {error ? error.message : null}\r\n            {team && (\r\n                <div className={isActive ? 'modal is-active' : 'modal'}>\r\n                    <div className=\"modal-background\"></div>\r\n                    <div className=\"modal-card\">\r\n                        <header className=\"modal-card-head\">\r\n                            <p className=\"modal-card-title\">Create New Project</p>\r\n                            <button\r\n                                className=\"delete\"\r\n                                aria-label=\"close\"\r\n                                onClick={() => setIsActive(!isActive)}\r\n                            ></button>\r\n                        </header>\r\n                        <section className=\"modal-card-body\">\r\n                            {/* Title Field */}\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Title</label>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={!title ? 'input is-danger' : 'input'}\r\n                                        value={title}\r\n                                        onChange={handleTitleChange}\r\n                                    />\r\n                                </div>\r\n                                {!title && <p className=\"help is-danger\">Title is required.</p>}\r\n                            </div>\r\n\r\n                            {/* Description Field */}\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Description</label>\r\n                                <div className=\"control\">\r\n                                    <textarea\r\n                                        className={!description ? 'textarea is-danger' : 'textarea'}\r\n                                        value={description}\r\n                                        onChange={handleDescriptionChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                                {!description && <p className=\"help is-danger\">Description is required.</p>}\r\n                            </div>\r\n\r\n                            {/* Manager Field */}\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Manager</label>\r\n                                <div className=\"control\">{createManagersOptionsList(team.data.memberships)}</div>\r\n                            </div>\r\n                        </section>\r\n                        <footer className=\"modal-card-foot\">\r\n                            {!title || !description ? (\r\n                                <button className=\"button is-success\" disabled onClick={handleSubmit}>\r\n                                    Submit\r\n                                </button>\r\n                            ) : (\r\n                                <button className=\"button is-success\" onClick={handleSubmit}>\r\n                                    Submit\r\n                                </button>\r\n                            )}\r\n\r\n                            <button className=\"button\" onClick={() => setIsActive(!isActive)}>\r\n                                Cancel\r\n                            </button>\r\n                        </footer>\r\n                    </div>\r\n                    <button className=\"modal-close is-large\" onClick={() => setIsActive(!isActive)}></button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateProjectModalForm;\r\n",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectDetailView.tsx",["136","137"],"import React from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n// Interface imports\r\nimport { NewOrUpdatedTicketProps, Project, Ticket } from '../../types';\r\nimport { archiveProject, getTeamDetails, unarchiveProject } from '../API/FirebaseAPI';\r\n\r\n// internal imports\r\nimport CreateTicketModalForm from '../tickets/CreateTicketModalForm';\r\nimport TicketTableContainer from '../tickets/TicketTableContainer';\r\nimport AssignedDevelopersList from './AssignedDevelopersList';\r\nimport ManageProjectMembers from './ManageProjectMembers';\r\nimport UpdateProjectModalForm from './UpdateProjectModalForm';\r\n\r\ninterface ProjectDetailViewProps {\r\n    project: Project;\r\n    tickets: Ticket[];\r\n    createTicket: (newTicket: NewOrUpdatedTicketProps) => void;\r\n}\r\n\r\ninterface ProjectDetailPaneProps {\r\n    project: Project;\r\n}\r\n\r\ninterface ParamTypes {\r\n    teamSlug: string;\r\n    projectSlug: string;\r\n}\r\n\r\nconst ProjectDetailView: React.FunctionComponent<ProjectDetailViewProps> = ({\r\n    project,\r\n    tickets,\r\n    createTicket,\r\n}: ProjectDetailViewProps): React.ReactElement => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"columns\">\r\n                <div className=\"column is-one-third\">\r\n                    <ProjectDetailPane project={project} />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"block\">\r\n                        <TicketTableContainer openTickets={project.open_tickets} tickets={[...tickets]} />\r\n                    </div>\r\n                    <div className=\"block\">\r\n                        {project.user_permissions.create_tickets && (\r\n                            <CreateTicketModalForm createTicket={createTicket} canAssignDeveloper={project.user_permissions.assign_developer} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProjectDetailPane: React.FunctionComponent<ProjectDetailPaneProps> = ({\r\n    project,\r\n}: ProjectDetailPaneProps): React.ReactElement => {\r\n    const { title, manager, description, created, memberships, is_archived, user_permissions } = project;\r\n    const history = useHistory();\r\n\r\n    const { teamSlug, projectSlug } = useParams<ParamTypes>();\r\n    const { isLoading, error, data: team } = useQuery<any, Error>(\r\n        ['teamDetails', { teamSlug }],\r\n        () => getTeamDetails({ teamSlug }),\r\n        { staleTime: 30000 },\r\n    );\r\n\r\n    // archiving and unarchiving projects\r\n    const queryClient = useQueryClient();\r\n    const archiveProjectMutation = useMutation(archiveProject, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries('projectList');\r\n            queryClient.invalidateQueries('projectDetails');\r\n            queryClient.refetchQueries();\r\n            toast.success('Project archived!');\r\n            history.push(`/teams/${teamSlug}/projects/`);\r\n        },\r\n        onError: () => {\r\n            toast.error('Something went wrong. Please try again.');\r\n        },\r\n    });\r\n    const handleArchiveProject = (): void => {\r\n        const data = { is_archived: true, title: project.title };\r\n        archiveProjectMutation.mutate({ teamSlug, projectSlug, data });\r\n    };\r\n\r\n    const unarchiveProjectMutation = useMutation(unarchiveProject, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries('projectList');\r\n            queryClient.invalidateQueries('projectDetails');\r\n            queryClient.refetchQueries();\r\n            toast.success('Project reopened!');\r\n        },\r\n        onError: () => {\r\n            toast.error('Something went wrong. Please try again.');\r\n        },\r\n    });\r\n    const handleUnarchiveProject = (): void => {\r\n        const data = { is_archived: false, title: project.title };\r\n        unarchiveProjectMutation.mutate({ teamSlug, projectSlug, data });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"block\">\r\n                <h1 className=\"title is-1 has-text-dark-grey\">{title}</h1>\r\n            </div>\r\n            <div className=\"block\">\r\n                <p className=\"subtitle has-text-dark-grey\">{description}</p>\r\n            </div>\r\n            <div className=\"block\">\r\n                <p className=\"pt-1 text-gray-700\">\r\n                    <strong>Manager: </strong>\r\n                    {manager ? manager : 'None assigned'}\r\n                </p>\r\n\r\n                <p className=\"text-gray-700 pt-1\">Created: {new Date(created).toLocaleDateString()}</p>\r\n            </div>\r\n            <div className=\"block\">\r\n                <AssignedDevelopersList memberships={memberships} />\r\n            </div>\r\n\r\n            {/* This block loads conditional on the current user having permission to edit the project. */}\r\n            {user_permissions.edit && (\r\n                <div>\r\n                    <div className=\"block\">\r\n                        <nav className=\"level\"></nav>\r\n                        <div className=\"level-left\">\r\n                            <div className=\"level-item\">\r\n                                {is_archived ? (\r\n                                    <button\r\n                                        className=\"button is-warning is-dark\"\r\n                                        onClick={() => handleUnarchiveProject()}\r\n                                    >\r\n                                        Reopen project\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"button is-warning is-dark\"\r\n                                        onClick={() => handleArchiveProject()}\r\n                                    >\r\n                                        Archive project\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"level-item\">\r\n                                <UpdateProjectModalForm project={project} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"block\">\r\n                        {isLoading ? (\r\n                            <button className=\"button is-white is-loading\">Manage project members</button>\r\n                        ) : (\r\n                            <ManageProjectMembers team={team.data} project={project} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectDetailView;\r\n",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\types.ts",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\AssignedDevelopersList.tsx",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\CreateTicketModalForm.tsx",["138"],"import React, { Fragment } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// interface imports\r\nimport { ProjectMembership, NewOrUpdatedTicketProps } from '../../types';\r\nimport { getProjectDetails } from '../API/FirebaseAPI';\r\n\r\ninterface CreateTicketModalFormProps {\r\n    createTicket: (newTicket: NewOrUpdatedTicketProps) => void;\r\n    canAssignDeveloper: boolean;\r\n}\r\n\r\ninterface ParamTypes {\r\n    projectSlug: string;\r\n    teamSlug: string;\r\n}\r\n\r\nconst CreateTicketModalForm: React.FunctionComponent<CreateTicketModalFormProps> = ({\r\n    createTicket,\r\n    canAssignDeveloper,\r\n}: CreateTicketModalFormProps): React.ReactElement => {\r\n    // getting the projectSlug from the URL\r\n    const { projectSlug, teamSlug } = useParams<ParamTypes>();\r\n    const { isLoading, error, data: project } = useQuery<any, Error>(\r\n        ['projectDetails', { teamSlug, projectSlug }],\r\n        () => getProjectDetails({ teamSlug, projectSlug }),\r\n        { staleTime: 30000 },\r\n    );\r\n\r\n    // state for form data\r\n    const [title, setTitle] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [developer, setDeveloper] = React.useState('');\r\n    const [priority, setPriority] = React.useState('');\r\n\r\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const handleDeveloperChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setDeveloper(e.target.value);\r\n    };\r\n\r\n    const handlePriorityChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setPriority(e.target.value);\r\n    };\r\n\r\n    // state for whether the modal is active or not\r\n    const [isActive, setIsActive] = React.useState(false);\r\n\r\n    const handleToggleIsActive = () => {\r\n        setIsActive(!isActive);\r\n    };\r\n\r\n    // submitting form data\r\n    const handleSubmit = () => {\r\n        const convertPriorityToNumber = (priority: string): number => {\r\n            if (priority === 'Low') {\r\n                return 1;\r\n            } else if (priority === 'High') {\r\n                return 2;\r\n            } else {\r\n                return 3;\r\n            }\r\n        };\r\n\r\n        const newTicket = {\r\n            title: title,\r\n            description: description,\r\n            developer: developer,\r\n            priority: convertPriorityToNumber(priority),\r\n            project: projectSlug,\r\n        };\r\n        createTicket(newTicket);\r\n        setIsActive(false);\r\n    };\r\n\r\n    const createDevelopersOptionsList = (members: ProjectMembership[]): React.ReactElement => {\r\n        const developers: string[] = members\r\n            // // uncomment the following three lines if you want the possible developers to NOT include managers\r\n            //     // .filter((member) => {\r\n            //     //     return member.role_name == 'Developer';\r\n            //     // })\r\n            .map((developer) => developer.user);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"select\">\r\n                    <select value={developer} onChange={handleDeveloperChange}>\r\n                        <option value=\"\" selected disabled>\r\n                            Assign a developer (optional)\r\n                        </option>\r\n                        {developers.map((developer) => (\r\n                            <option key={developer} value={developer}>\r\n                                {developer}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                className={isLoading ? 'button is-primary is-loading' : 'button is-primary'}\r\n                onClick={handleToggleIsActive}\r\n            >\r\n                Submit Ticket\r\n            </button>\r\n\r\n            {error ? error.message : null}\r\n            {project && (\r\n                <div className={isActive ? 'modal is-active' : 'modal'}>\r\n                    <div className=\"modal-background\"></div>\r\n                    <div className=\"modal-card\">\r\n                        <header className=\"modal-card-head\">\r\n                            <p className=\"modal-card-title\">Submit Ticket</p>\r\n                            <button className=\"delete\" aria-label=\"close\" onClick={handleToggleIsActive}></button>\r\n                        </header>\r\n                        <section className=\"modal-card-body\">\r\n                            {/* Title Field */}\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Title</label>\r\n                                <div className=\"control\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={!title ? 'input is-danger' : 'input'}\r\n                                        value={title}\r\n                                        onChange={handleTitleChange}\r\n                                    />\r\n                                </div>\r\n                                {!title && <p className=\"help is-danger\">Title is required.</p>}\r\n                            </div>\r\n\r\n                            {/* Description Field */}\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Description</label>\r\n                                <div className=\"control\">\r\n                                    <textarea\r\n                                        className=\"textarea\"\r\n                                        value={description}\r\n                                        onChange={handleDescriptionChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Developer Field */}\r\n                            {canAssignDeveloper && (\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">Developer</label>\r\n                                    <div className=\"control\">\r\n                                        {createDevelopersOptionsList(project.data.memberships)}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Priority Field */}\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Priority</label>\r\n                                <div className=\"control\">\r\n                                    <div className={!priority ? 'select is-danger' : 'select'}>\r\n                                        <select value={priority} onChange={handlePriorityChange}>\r\n                                            <option selected disabled value=\"\">\r\n                                                Select priority\r\n                                            </option>\r\n                                            <option>Low</option>\r\n                                            <option>High</option>\r\n                                            <option>Urgent</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                {!priority && <p className=\"help is-danger\">Priority is required.</p>}\r\n                            </div>\r\n                        </section>\r\n                        <footer className=\"modal-card-foot\">\r\n                            {!title || !priority ? (\r\n                                <button className=\"button is-success\" disabled onClick={handleSubmit}>\r\n                                    Submit\r\n                                </button>\r\n                            ) : (\r\n                                <button className=\"button is-success\" onClick={handleSubmit}>\r\n                                    Submit\r\n                                </button>\r\n                            )}\r\n\r\n                            <button className=\"button\" onClick={handleToggleIsActive}>\r\n                                Cancel\r\n                            </button>\r\n                        </footer>\r\n                    </div>\r\n                    <button className=\"modal-close is-large\" onClick={handleToggleIsActive}></button>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CreateTicketModalForm;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\UpdateTicketModalForm.tsx",["139","140"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailView.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\index.tsx",[],[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\App.tsx",["141"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\LoadingBar.tsx",["142"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\AdminsTeamMembersPanel.tsx",["143","144"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\LeaveTeamModal.tsx",["145","146"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\context\\TeamContextDEPRECATED.jsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTableContainer.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectFilter.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketDetailContainer.tsx",["147","148","149","150","151","152","153"],"import React from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport projectDetail from '../../fakeAPI/projectDetail';\r\n\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { closeTicket, getTicketDetails, reopenTicket, updateTicket } from '../API/FirebaseAPI';\r\n\r\nimport LoadingBar from '../LoadingBar';\r\n\r\n// interfaces\r\nimport { NewOrUpdatedTicketProps, Project } from '../../types';\r\n\r\nimport TicketDetailView from './TicketDetailView';\r\n\r\ninterface ParamTypes {\r\n    teamSlug: string;\r\n    projectSlug: string;\r\n    ticketSlug: string;\r\n}\r\n\r\nconst TicketDetailContainer = (props: any): React.ReactElement => {\r\n    const { ticketSlug, projectSlug, teamSlug } = useParams<ParamTypes>();\r\n    const history = useHistory();\r\n    const { isLoading, error, data } = useQuery<any, Error>(\r\n        ['ticketDetails', { teamSlug, ticketSlug }],\r\n        () => getTicketDetails({ teamSlug, projectSlug, ticketSlug }),\r\n        { staleTime: 30000 },\r\n    );\r\n\r\n    const queryClient = useQueryClient();\r\n    const closingMutation = useMutation(closeTicket, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries(['ticketDetails', { teamSlug, ticketSlug }]);\r\n            queryClient.invalidateQueries(['ticketList', { teamSlug, projectSlug }]);\r\n            history.push(`/teams/${teamSlug}/projects/${projectSlug}/`);\r\n            toast.success('Ticket closed!');\r\n        },\r\n    });\r\n\r\n    const handleCloseTicket = (ticketSlug: string, resolutionState?: string): void => {\r\n        const data = { is_open: false, resolution: resolutionState ? resolutionState : 'Unspecified.' };\r\n        closingMutation.mutate({ teamSlug, projectSlug, ticketSlug, data });\r\n    };\r\n\r\n    const reopeningMutation = useMutation(reopenTicket, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries(['ticketDetails', { teamSlug, ticketSlug }]);\r\n            queryClient.invalidateQueries(['ticketList', { teamSlug, projectSlug }]);\r\n            toast.success('Ticket reopened!');\r\n        },\r\n    });\r\n\r\n    const handleReopenTicket = (ticketSlug: string): void => {\r\n        reopeningMutation.mutate({ teamSlug, projectSlug, ticketSlug });\r\n    };\r\n\r\n    const updatingTicketMutation = useMutation(updateTicket, {\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries(['ticketDetails', { teamSlug, ticketSlug }]);\r\n            queryClient.invalidateQueries(['ticketList', { teamSlug, projectSlug }]);\r\n            toast.success('Ticket updated!');\r\n        },\r\n    });\r\n\r\n    const handleUpdateTicket = (updatedTicket: NewOrUpdatedTicketProps): void => {\r\n        console.log(`Updating ticket ${ticketSlug}`);\r\n        console.log(updatedTicket);\r\n        updatingTicketMutation.mutate({ teamSlug, projectSlug, ticketSlug, updatedTicket })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoading ? <LoadingBar /> : null}\r\n            {error ? error.message : null}\r\n            {data && (\r\n                <TicketDetailView ticket={data.data} handleCloseTicket={handleCloseTicket} handleReopenTicket={handleReopenTicket} updateTicket={handleUpdateTicket} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TicketDetailContainer;\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\teams\\InviteUserToTeamModal.tsx",["154"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\auth\\Dashboard.jsx",["155","156","157"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\auth\\FirebaseUI.jsx",["158"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\context\\AuthContext.jsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ProjectTable.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketFilter.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\tickets\\TicketTableRow.tsx",["159"],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\NavBar.tsx",["160","161","162"],"import React from 'react';\r\n\r\nimport { Route, NavLink, Link, useParams } from 'react-router-dom';\r\n\r\nimport logo from '../assets/bugtracking_logo.png';\r\n\r\ninterface ParamTypes {\r\n    teamSlug: string;\r\n    projectSlug: string;\r\n    ticketSlug: string;\r\n}\r\n\r\nexport default function NavBar() {\r\n    const { teamSlug, projectSlug, ticketSlug } = useParams<ParamTypes>();\r\n    console.log(teamSlug);\r\n\r\n    return (\r\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"navbar-brand\">\r\n                <Link className=\"navbar-item\" to=\"/\">\r\n                    <img src={logo} alt=\"Bugtracking.io\" />\r\n                </Link>\r\n\r\n                <a\r\n                    role=\"button\"\r\n                    className=\"navbar-burger\"\r\n                    aria-label=\"menu\"\r\n                    aria-expanded=\"false\"\r\n                    data-target=\"navbarBasicExample\"\r\n                >\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </a>\r\n            </div>\r\n\r\n            <div id=\"navbar-main\" className=\"navbar-menu\">\r\n                <div className=\"navbar-start\">\r\n                    <NavLink\r\n                        className=\"navbar-item\"\r\n                        activeClassName=\"navbar-item has-text-weight-semibold\"\r\n                        exact\r\n                        to=\"/teams/\"\r\n                    >\r\n                        Teams\r\n                    </NavLink>\r\n\r\n                    {teamSlug && (\r\n                        <NavLink\r\n                            className=\"navbar-item\"\r\n                            activeClassName=\"navbar-item has-text-weight-semibold\"\r\n                            exact\r\n                            to={`/teams/${teamSlug}/projects/`}\r\n                        >\r\n                            Projects\r\n                        </NavLink>\r\n                    )}\r\n\r\n                    {projectSlug && (\r\n                        <NavLink\r\n                            className=\"navbar-item\"\r\n                            activeClassName=\"navbar-item has-text-weight-semibold\"\r\n                            exact\r\n                            to={`/teams/${teamSlug}/projects/${projectSlug}`}\r\n                        >\r\n                            Tickets\r\n                        </NavLink>\r\n                    )}\r\n\r\n                    {/* Dropdown */}\r\n                    {/* <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                        <a className=\"navbar-link\">More</a>\r\n\r\n                        <div className=\"navbar-dropdown\">\r\n                            <a className=\"navbar-item\">About</a>\r\n                            <a className=\"navbar-item\">Jobs</a>\r\n                            <a className=\"navbar-item\">Contact</a>\r\n                            <hr className=\"navbar-divider\" />\r\n                            <a className=\"navbar-item\">Report an issue</a>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className=\"navbar-end\">\r\n                    <Link className=\"navbar-item\" to=\"/\">\r\n                        Documentation\r\n                    </Link>\r\n                    <div className=\"navbar-item\">\r\n                        <div className=\"buttons\">\r\n                            <a className=\"button is-primary\">\r\n                                <strong>Sign up</strong>\r\n                            </a>\r\n                            <a className=\"button is-light\">Log in</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\API\\MyQueryClientProvider.jsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\API\\FirebaseAPI.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import axios from 'axios';\r\nimport { baseURL, getHeaders } from './ApiConfig';\r\nimport { auth } from '../../auth/firebase';\r\n\r\n// TEAMS\r\n\r\nexport const getTeamsList = async () => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios.get(baseURL + 'teams/', { headers: getHeaders(accessToken) }).catch((err) => {\r\n        if (err.response) {\r\n            throw new Error(err.response.data['errors'] || err.response.data['detail'] || err.response.data['error']);\r\n        } else {\r\n            throw new Error(err);\r\n        }\r\n    });\r\n};\r\n\r\nexport const getTeamDetails = async ({ teamSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios.get(`${baseURL}teams/${teamSlug}/`, { headers: getHeaders(accessToken) }).catch((err) => {\r\n        if (err.response) {\r\n            throw new Error(err.response.data['errors'] || err.response.data['detail'] || err.response.data['error']);\r\n        } else {\r\n            throw new Error(err);\r\n        }\r\n    });\r\n};\r\n\r\nexport const createTeam = async ({ newTeam }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios.post(baseURL + 'teams/', newTeam, { headers: getHeaders(accessToken) }).catch((err) => {\r\n        if (err.response) {\r\n            throw new Error(err.response.data['errors'] || err.response.data['detail'] || err.response.data['error']);\r\n        } else {\r\n            throw new Error(err);\r\n        }\r\n    });\r\n};\r\n\r\nexport const inviteToTeam = async ({ teamSlug, data }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .post(`${baseURL}teams/${teamSlug}/invitations/`, data, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const removeTeamMember = async ({ teamSlug, member }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .put(`${baseURL}teams/${teamSlug}/remove_member/`, member, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const leaveTeam = async ({ teamSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .get(`${baseURL}teams/${teamSlug}/leave_team/`, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const stepDownAsTeamAdmin = async ({ teamSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .get(`${baseURL}teams/${teamSlug}/step_down_as_admin/`, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const promoteToAdmin = async ({ teamSlug, member }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .post(`${baseURL}teams/${teamSlug}/promote_admin/`, member, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const acceptTeamInvite = async ({ teamSlug, invitationId }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .get(`${baseURL}teams/${teamSlug}/accept_invitation/?invitation=${invitationId}`, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\n// PROJECTS\r\n\r\nexport const getProjectList = async ({ teamSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios.get(`${baseURL}teams/${teamSlug}/projects/`, { headers: getHeaders(accessToken) }).catch((err) => {\r\n        if (err.response) {\r\n            throw new Error(err.response.data['errors'] || err.response.data['detail'] || err.response.data['error']);\r\n        } else {\r\n            throw new Error(err);\r\n        }\r\n    });\r\n};\r\n\r\nexport const getProjectDetails = async ({ teamSlug, projectSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .get(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/`, { headers: getHeaders(accessToken) })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const createProject = async ({ teamSlug, newProject }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .post(`${baseURL}teams/${teamSlug}/projects/`, newProject, { headers: getHeaders(accessToken) })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const updateProject = async ({ teamSlug, projectSlug, updatedProject }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .put(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/`, updatedProject, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const addProjectMember = async ({ teamSlug, projectSlug, member }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .put(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/add_member/`, member, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const removeProjectMember = async ({ teamSlug, projectSlug, member }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .put(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/remove_member/`, member, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const archiveProject = async ({ teamSlug, projectSlug, data }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .put(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/`, data, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const unarchiveProject = async ({ teamSlug, projectSlug, data }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .put(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/`, data, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\n// TICKETS\r\n\r\nexport const getTicketList = async ({ teamSlug, projectSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .get(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/tickets/`, { headers: getHeaders(accessToken) })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const getTicketDetails = async ({ teamSlug, projectSlug, ticketSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .get(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/tickets/${ticketSlug}/`, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const createTicket = async ({ teamSlug, projectSlug, newTicket }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .post(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/tickets/`, newTicket, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const closeTicket = async ({ teamSlug, projectSlug, ticketSlug, data }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .patch(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/tickets/${ticketSlug}/`, data, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const reopenTicket = async ({ teamSlug, projectSlug, ticketSlug }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .patch(\r\n            `${baseURL}teams/${teamSlug}/projects/${projectSlug}/tickets/${ticketSlug}/`,\r\n            { is_open: true },\r\n            {\r\n                headers: getHeaders(accessToken),\r\n            },\r\n        )\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const updateTicket = async ({ teamSlug, projectSlug, ticketSlug, updatedTicket }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .patch(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/tickets/${ticketSlug}/`, updatedTicket, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n\r\nexport const createComment = async ({ teamSlug, projectSlug, ticketSlug, comment }) => {\r\n    const accessToken = auth.currentUser ? await auth.currentUser.getIdToken() : undefined;\r\n\r\n    return axios\r\n        .post(`${baseURL}teams/${teamSlug}/projects/${projectSlug}/tickets/${ticketSlug}/create_comment/`, comment, {\r\n            headers: getHeaders(accessToken),\r\n        })\r\n        .catch((err) => {\r\n            if (err.response) {\r\n                throw new Error(\r\n                    err.response.data['errors'] || err.response.data['detail'] || err.response.data['error'],\r\n                );\r\n            } else {\r\n                throw new Error(err);\r\n            }\r\n        });\r\n};\r\n",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\utils.tsx",[],"C:\\Users\\thurm\\Documents\\my_apps\\bugtracker_react_v2\\bugtracker-react\\src\\components\\projects\\ManageProjectMembers.tsx",["210","211","212","213"],{"ruleId":"214","severity":1,"message":"215","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":17},{"ruleId":"214","severity":1,"message":"218","line":9,"column":10,"nodeType":"216","messageId":"217","endLine":9,"endColumn":34},{"ruleId":"219","severity":1,"message":"220","line":18,"column":55,"nodeType":"221","messageId":"222","endLine":18,"endColumn":58,"suggestions":"223"},{"ruleId":"214","severity":1,"message":"224","line":28,"column":11,"nodeType":"216","messageId":"217","endLine":28,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":50,"column":26,"nodeType":"221","messageId":"222","endLine":50,"endColumn":29,"suggestions":"225"},{"ruleId":"214","severity":1,"message":"226","line":65,"column":24,"nodeType":"216","messageId":"217","endLine":65,"endColumn":29},{"ruleId":"219","severity":1,"message":"220","line":65,"column":55,"nodeType":"221","messageId":"222","endLine":65,"endColumn":58,"suggestions":"227"},{"ruleId":"219","severity":1,"message":"220","line":25,"column":58,"nodeType":"221","messageId":"222","endLine":25,"endColumn":61,"suggestions":"228"},{"ruleId":"214","severity":1,"message":"229","line":3,"column":21,"nodeType":"216","messageId":"217","endLine":3,"endColumn":31},{"ruleId":"219","severity":1,"message":"220","line":25,"column":58,"nodeType":"221","messageId":"222","endLine":25,"endColumn":61,"suggestions":"230"},{"ruleId":"214","severity":1,"message":"231","line":16,"column":10,"nodeType":"216","messageId":"217","endLine":16,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":3,"column":16,"nodeType":"234","messageId":"235","endLine":3,"endColumn":37},{"ruleId":"219","severity":1,"message":"220","line":40,"column":26,"nodeType":"221","messageId":"222","endLine":40,"endColumn":29,"suggestions":"236"},{"ruleId":"219","severity":1,"message":"220","line":57,"column":26,"nodeType":"221","messageId":"222","endLine":57,"endColumn":29,"suggestions":"237"},{"ruleId":"232","severity":1,"message":"233","line":11,"column":16,"nodeType":"234","messageId":"235","endLine":11,"endColumn":41},{"ruleId":"219","severity":1,"message":"220","line":26,"column":26,"nodeType":"221","messageId":"222","endLine":26,"endColumn":29,"suggestions":"238"},{"ruleId":"214","severity":1,"message":"239","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"240","line":13,"column":35,"nodeType":"216","messageId":"217","endLine":13,"endColumn":42},{"ruleId":"232","severity":1,"message":"241","line":23,"column":32,"nodeType":"216","messageId":"242","endLine":23,"endColumn":42},{"ruleId":"214","severity":1,"message":"243","line":23,"column":32,"nodeType":"216","messageId":"217","endLine":23,"endColumn":42},{"ruleId":"219","severity":1,"message":"220","line":23,"column":39,"nodeType":"221","messageId":"222","endLine":23,"endColumn":42,"suggestions":"244"},{"ruleId":"219","severity":1,"message":"220","line":26,"column":49,"nodeType":"221","messageId":"222","endLine":26,"endColumn":52,"suggestions":"245"},{"ruleId":"219","severity":1,"message":"220","line":31,"column":26,"nodeType":"221","messageId":"222","endLine":31,"endColumn":29,"suggestions":"246"},{"ruleId":"232","severity":1,"message":"233","line":6,"column":16,"nodeType":"234","messageId":"235","endLine":6,"endColumn":36},{"ruleId":"214","severity":1,"message":"226","line":7,"column":12,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"247","line":8,"column":13,"nodeType":"216","messageId":"217","endLine":8,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":5,"column":20,"nodeType":"248","messageId":"235","endLine":5,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"249","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":15},{"ruleId":"232","severity":1,"message":"233","line":13,"column":16,"nodeType":"234","messageId":"235","endLine":13,"endColumn":33},{"ruleId":"214","severity":1,"message":"250","line":14,"column":36,"nodeType":"216","messageId":"217","endLine":14,"endColumn":46},{"ruleId":"232","severity":1,"message":"233","line":7,"column":29,"nodeType":"248","messageId":"235","endLine":7,"endColumn":40},{"ruleId":"232","severity":1,"message":"233","line":19,"column":31,"nodeType":"248","messageId":"235","endLine":19,"endColumn":54},{"ruleId":"232","severity":1,"message":"251","line":19,"column":38,"nodeType":"252","messageId":"253","endLine":19,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":31,"column":27,"nodeType":"248","messageId":"235","endLine":31,"endColumn":49},{"ruleId":"232","severity":1,"message":"251","line":31,"column":34,"nodeType":"252","messageId":"253","endLine":31,"endColumn":45},{"ruleId":"232","severity":1,"message":"233","line":43,"column":29,"nodeType":"248","messageId":"235","endLine":43,"endColumn":58},{"ruleId":"232","severity":1,"message":"251","line":43,"column":36,"nodeType":"252","messageId":"253","endLine":43,"endColumn":54},{"ruleId":"232","severity":1,"message":"233","line":61,"column":33,"nodeType":"248","messageId":"235","endLine":61,"endColumn":64},{"ruleId":"232","severity":1,"message":"251","line":61,"column":40,"nodeType":"252","messageId":"253","endLine":61,"endColumn":60},{"ruleId":"232","severity":1,"message":"233","line":79,"column":26,"nodeType":"248","messageId":"235","endLine":79,"endColumn":49},{"ruleId":"232","severity":1,"message":"251","line":79,"column":33,"nodeType":"252","messageId":"253","endLine":79,"endColumn":45},{"ruleId":"232","severity":1,"message":"233","line":97,"column":36,"nodeType":"248","messageId":"235","endLine":97,"endColumn":59},{"ruleId":"232","severity":1,"message":"251","line":97,"column":43,"nodeType":"252","messageId":"253","endLine":97,"endColumn":55},{"ruleId":"232","severity":1,"message":"233","line":115,"column":31,"nodeType":"248","messageId":"235","endLine":115,"endColumn":62},{"ruleId":"232","severity":1,"message":"251","line":115,"column":38,"nodeType":"252","messageId":"253","endLine":115,"endColumn":58},{"ruleId":"232","severity":1,"message":"233","line":133,"column":33,"nodeType":"248","messageId":"235","endLine":133,"endColumn":70},{"ruleId":"232","severity":1,"message":"251","line":133,"column":40,"nodeType":"252","messageId":"253","endLine":133,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":153,"column":31,"nodeType":"248","messageId":"235","endLine":153,"endColumn":54},{"ruleId":"232","severity":1,"message":"251","line":153,"column":38,"nodeType":"252","messageId":"253","endLine":153,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":165,"column":34,"nodeType":"248","messageId":"235","endLine":165,"endColumn":70},{"ruleId":"232","severity":1,"message":"251","line":165,"column":41,"nodeType":"252","messageId":"253","endLine":165,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":181,"column":30,"nodeType":"248","messageId":"235","endLine":181,"endColumn":65},{"ruleId":"232","severity":1,"message":"251","line":181,"column":37,"nodeType":"252","messageId":"253","endLine":181,"endColumn":61},{"ruleId":"232","severity":1,"message":"233","line":197,"column":30,"nodeType":"248","messageId":"235","endLine":197,"endColumn":82},{"ruleId":"232","severity":1,"message":"251","line":197,"column":37,"nodeType":"252","messageId":"253","endLine":197,"endColumn":78},{"ruleId":"232","severity":1,"message":"233","line":215,"column":33,"nodeType":"248","messageId":"235","endLine":215,"endColumn":77},{"ruleId":"232","severity":1,"message":"251","line":215,"column":40,"nodeType":"252","messageId":"253","endLine":215,"endColumn":73},{"ruleId":"232","severity":1,"message":"233","line":233,"column":36,"nodeType":"248","messageId":"235","endLine":233,"endColumn":80},{"ruleId":"232","severity":1,"message":"251","line":233,"column":43,"nodeType":"252","messageId":"253","endLine":233,"endColumn":76},{"ruleId":"232","severity":1,"message":"233","line":251,"column":31,"nodeType":"248","messageId":"235","endLine":251,"endColumn":73},{"ruleId":"232","severity":1,"message":"251","line":251,"column":38,"nodeType":"252","messageId":"253","endLine":251,"endColumn":69},{"ruleId":"232","severity":1,"message":"233","line":269,"column":33,"nodeType":"248","messageId":"235","endLine":269,"endColumn":75},{"ruleId":"232","severity":1,"message":"251","line":269,"column":40,"nodeType":"252","messageId":"253","endLine":269,"endColumn":71},{"ruleId":"232","severity":1,"message":"233","line":289,"column":30,"nodeType":"248","messageId":"235","endLine":289,"endColumn":66},{"ruleId":"232","severity":1,"message":"251","line":289,"column":37,"nodeType":"252","messageId":"253","endLine":289,"endColumn":62},{"ruleId":"232","severity":1,"message":"233","line":305,"column":33,"nodeType":"248","messageId":"235","endLine":305,"endColumn":81},{"ruleId":"232","severity":1,"message":"251","line":305,"column":40,"nodeType":"252","messageId":"253","endLine":305,"endColumn":77},{"ruleId":"232","severity":1,"message":"233","line":323,"column":29,"nodeType":"248","messageId":"235","endLine":323,"endColumn":76},{"ruleId":"232","severity":1,"message":"251","line":323,"column":36,"nodeType":"252","messageId":"253","endLine":323,"endColumn":72},{"ruleId":"232","severity":1,"message":"233","line":341,"column":28,"nodeType":"248","messageId":"235","endLine":341,"endColumn":82},{"ruleId":"232","severity":1,"message":"251","line":341,"column":35,"nodeType":"252","messageId":"253","endLine":341,"endColumn":78},{"ruleId":"232","severity":1,"message":"233","line":359,"column":29,"nodeType":"248","messageId":"235","endLine":359,"endColumn":77},{"ruleId":"232","severity":1,"message":"251","line":359,"column":36,"nodeType":"252","messageId":"253","endLine":359,"endColumn":73},{"ruleId":"232","severity":1,"message":"233","line":381,"column":29,"nodeType":"248","messageId":"235","endLine":381,"endColumn":92},{"ruleId":"232","severity":1,"message":"251","line":381,"column":36,"nodeType":"252","messageId":"253","endLine":381,"endColumn":88},{"ruleId":"232","severity":1,"message":"233","line":399,"column":30,"nodeType":"248","messageId":"235","endLine":399,"endColumn":87},{"ruleId":"232","severity":1,"message":"251","line":399,"column":37,"nodeType":"252","messageId":"253","endLine":399,"endColumn":83},{"ruleId":"214","severity":1,"message":"254","line":3,"column":23,"nodeType":"216","messageId":"217","endLine":3,"endColumn":31},{"ruleId":"214","severity":1,"message":"255","line":5,"column":25,"nodeType":"216","messageId":"217","endLine":5,"endColumn":39},{"ruleId":"214","severity":1,"message":"256","line":6,"column":28,"nodeType":"216","messageId":"217","endLine":6,"endColumn":42},{"ruleId":"232","severity":1,"message":"233","line":18,"column":16,"nodeType":"234","messageId":"235","endLine":18,"endColumn":91},"@typescript-eslint/no-unused-vars","'useAuth' is defined but never used.","Identifier","unusedVar","'NewOrUpdatedProjectProps' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["257","258"],"'history' is assigned a value but never used.",["259","260"],"'error' is assigned a value but never used.",["261","262"],["263","264"],"'useHistory' is defined but never used.",["265","266"],"'ReactQueryDevtools' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType",["267","268"],["269","270"],["271","272"],"'projectDetail' is defined but never used.","'Project' is defined but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg","'props' is defined but never used.",["273","274"],["275","276"],["277","278"],"'currentUser' is assigned a value but never used.","ArrowFunctionExpression","'Route' is defined but never used.","'ticketSlug' is assigned a value but never used.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","'useQuery' is defined but never used.","'TeamMembership' is defined but never used.","'getTeamDetails' is defined but never used.",{"messageId":"279","fix":"280","desc":"281"},{"messageId":"282","fix":"283","desc":"284"},{"messageId":"279","fix":"285","desc":"281"},{"messageId":"282","fix":"286","desc":"284"},{"messageId":"279","fix":"287","desc":"281"},{"messageId":"282","fix":"288","desc":"284"},{"messageId":"279","fix":"289","desc":"281"},{"messageId":"282","fix":"290","desc":"284"},{"messageId":"279","fix":"291","desc":"281"},{"messageId":"282","fix":"292","desc":"284"},{"messageId":"279","fix":"293","desc":"281"},{"messageId":"282","fix":"294","desc":"284"},{"messageId":"279","fix":"295","desc":"281"},{"messageId":"282","fix":"296","desc":"284"},{"messageId":"279","fix":"297","desc":"281"},{"messageId":"282","fix":"298","desc":"284"},{"messageId":"279","fix":"299","desc":"281"},{"messageId":"282","fix":"300","desc":"284"},{"messageId":"279","fix":"301","desc":"281"},{"messageId":"282","fix":"302","desc":"284"},{"messageId":"279","fix":"303","desc":"281"},{"messageId":"282","fix":"304","desc":"284"},"suggestUnknown",{"range":"305","text":"306"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"305","text":"307"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"308","text":"306"},{"range":"308","text":"307"},{"range":"309","text":"306"},{"range":"309","text":"307"},{"range":"310","text":"306"},{"range":"310","text":"307"},{"range":"311","text":"306"},{"range":"311","text":"307"},{"range":"312","text":"306"},{"range":"312","text":"307"},{"range":"313","text":"306"},{"range":"313","text":"307"},{"range":"314","text":"306"},{"range":"314","text":"307"},{"range":"315","text":"306"},{"range":"315","text":"307"},{"range":"316","text":"306"},{"range":"316","text":"307"},{"range":"317","text":"306"},{"range":"317","text":"307"},[730,733],"unknown","never",[1851,1854],[2460,2463],[864,867],[863,866],[1372,1375],[1944,1947],[865,868],[725,728],[915,918],[1099,1102]]